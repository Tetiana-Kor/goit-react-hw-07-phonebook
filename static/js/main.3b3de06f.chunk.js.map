{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","services/service-api.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contacts","phonebookReducer","store","configureStore","reducer","devTools","process","addContact","contact","axios","post","deleteContact","delete","defaults","baseURL","getContacts","getFilter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onSubmit","a","serviceAPI","data","operations","resetName","resetNumber","className","s","form","event","preventDefault","includeName","reduce","acc","includeNumber","alert","newContact","label","input","type","value","placeholder","onChange","currentTarget","pattern","btn","ContactList","onDeleteContact","then","catch","length","list","map","item","button","onClick","Filter","actions","target","Container","children","container","App","loadingContacts","useEffect","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b3de06f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2K0Oo\",\"item\":\"ContactList_item__1O7tH\",\"button\":\"ContactList_button__51Ln6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1YdSS\",\"input\":\"Filter_input__1APp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__34R6w\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport phonebookReducer from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport function fetchContacts() {\r\n  return axios.get(`/contacts`);\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return axios.post('/contacts', contact);\r\n}\r\n\r\nexport function deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n","import * as serviceAPI from '../services/service-api';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await serviceAPI.fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await serviceAPI.addContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  serviceAPI\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as operations from '../../redux/operations';\nimport { getContacts } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubmit = (name, number) =>\n    dispatch(operations.addContact(name, number));\n\n  const newContact = () => {\n    const includeName = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const includeNumber = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields!');\n      return true;\n    }\n\n    if (includeName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    } else if (includeNumber.includes(number)) {\n      alert(`${number} is already in contacts`);\n      return true;\n    }\n  };\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetName();\n    resetNumber();\n\n    if (newContact()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  const resetName = () => {\n    setName('');\n  };\n  const resetNumber = () => {\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Eden Clements\"\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"000-00-00\"\n          onChange={handleChangeNumber}\n          pattern=\"[0-7]{3}-[0-7]{2}-[0-7]{2}\"\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    contacts.length > 0 && (\n      <ul className={s.list}>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n}\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <>\n      <label className={s.filter}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Container from './components/Container/Container';\nimport { fetchContacts } from './redux/operations';\nimport { getLoading } from './redux/selectors';\nimport './App.css';\n\nexport default function App() {\n  const loadingContacts = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1 className=\"phonebook\">Phonebook</h1>\n      <ContactForm />\n\n      {loadingContacts && <p>Loading...</p>}\n      <h2 className=\"contacts\">Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__30-6g\",\"label\":\"ContactForm_label__3mEDC\",\"input\":\"ContactForm_input__2o0y-\",\"btn\":\"ContactForm_btn__1rUnw\"};"],"sourceRoot":""}